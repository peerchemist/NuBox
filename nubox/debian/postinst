#!/bin/sh
# postinst script for peerbox
#
# see: dh_installdeb(1)

intro() {
	echo '''
	$$\   $$\           $$$$$$$\                      
	$$$\  $$ |          $$  __$$\                     
	$$$$\ $$ |$$\   $$\ $$ |  $$ | $$$$$$\  $$\   $$\ 
	$$ $$\$$ |$$ |  $$ |$$$$$$$\ |$$  __$$\ \$$\ $$  |
	$$ \$$$$ |$$ |  $$ |$$  __$$\ $$ /  $$ | \$$$$  / 
	$$ |\$$$ |$$ |  $$ |$$ |  $$ |$$ |  $$ | $$  $$<  
	$$ | \$$ |\$$$$$$  |$$$$$$$  |\$$$$$$  |$$  /\$$\ 
	\__|  \__| \______/ \_______/  \______/ \__/  \__|
	'''

	echo "
	  Forked from Peerbox: www.peerbox.me
	  version: 0.1
	  url: www.nubits.com
	  forum: https://discuss.nubits.com/t/nubox-testing/3864
	  git: https://github.com/peerchemist/NuBox
	"
}

nuconf() {
	for _HOME in /home/*?; do
		# Obtain the username
		USER=$( basename ${_HOME} )

		if [ ! -d "$_HOME/.nu" ]; then
			echo "NuBits directory not found! Creating one now."
			mkdir -p $_HOME/.nu
		fi

		if [ ! -f $_HOME/.nu/nu.conf ]; then
			echo "NuBits configuration file not found! Creating one now."
			echo "rpcuser=rpcuser\nrpcpassword=$(xxd -l 16 -p /dev/urandom)" > $_HOME/.nu/nu.conf
			echo "server=1" >> $_HOME/.nu/nu.conf
		fi
		chown -R ${USER}:${USER} $_HOME/.nu
	done
}

rename() {
	if [ $(hostname) != "nubox" ]; then

			echo "
	Do you want to rename this machine to 'nubox'?
	This will enable automatic discovery on local network as 'nubox.local' \n\t[yn] "
			read input
			case "$input" in
			n*|N*)
			echo "
	Poor misguided one. Why are you installing this, then?"
			;;

			y*|Y*)
			hostnamectl --static set-hostname nubox
			echo "You should reboot now."
			;;

			esac
	fi
}

set -e

case "$1" in
    configure)
	systemctl daemon-reload
	##
	intro
	rename
	nuconf
	##

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0